#!/bin/bash
#------------------------------------------////
# FUNCTIONS:
#------------------------------------------////

mkdircd() {
    mkdir $1 && cd $1 || exit 1
}

createrepo() {
    curl -X POST -H "Authorization: token "$token"" -d '{ "name": "'"$2"'"}' "https://api.github.com/orgs/"$1"/repos"
}

sync() {
    if [ -d .repo ]; then
        time repo sync -c --no-clone-bundle --no-tags -q $@
    else
        cd ${HOME}/$1
        time repo sync -c --no-clone-bundle --no-tags -q $@
    fi
}

keygen() {
    ssh-keygen -t rsa -b 4096 -C $1
}

updategrub() {
    sudo grub-mkconfig -o /boot/grub/grub.cfg
}

genaptpkglist() {
    comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u)
}

gapp() {
    ps aux | grep $1
}

updatebinsubmodule() {
    if [ -d $HOME/scripts/bin/$1 ]; then
        cd $HOME/scripts/bin/$1 && git pull
        cd $HOME/scripts && git submodule update
        git add -A
        git commit -am "scripts: update ${1}"
    else
        echo "Submodule doesn't exist"
    fi
}

updatesubmodule() {
    if [ -d $pwd/.git ]; then
        cd $1 && git pull
        .. && git submodule update
    else
        echo "Submodule doesn't exist"
    fi
}

rewin() {
    sudo /usr/sbin/grub-reboot "Windows Boot Manager (on /dev/nvme0n1p1)"
    sudo /sbin/reboot
}

genkeystore() {
    keytool -genkey -v -keystore $KEYSTORES_PATH/$1.jks -alias $1 -keyalg RSA -keysize 4096 -validity 10000
}

signapk() {
    jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore $KEYSTORES_PATH/$1.jks $2 $1
}

cdp() {
    base_dir="${HOME}/projs"
    directory="${base_dir}/$1/$2"

    if [[ "$1" == 'w' ]]; then
        base_dir="${HOME}/win/d/projs"
        directory="${base_dir}/$2/$3"
    fi

    cd $directory
}

createuser() {
    sudo useradd -m $1 && sudo usermod -aG sudo $1
}
